# Build and publish latest twigs package to pypi

name: twigs build

on:
  push:
    branches: [ "master" ]
    paths:
      - 'twigs/__init__.py'
env:
  TEST_TAG: threatworx/twigs:test
  LATEST_TAG: threatworx/twigs:latest
  
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: checkout repo content
        uses: actions/checkout@v3 # checkout the repository content to github runner

      - name: get version tag
        run: |
          echo "TAG_NAME=$(cat twigs/__init__.py | grep version | cut -f2 -d"'" )" >> $GITHUB_ENV
          
      - name: checkout repo content
        run: pip install twine

      - name: build and publish twigs
        run: python ${GITHUB_WORKSPACE}/setup.py sdist bdist_wheel

      - name: verify package using twine
        run: twine check ${GITHUB_WORKSPACE}/dist/*.whl
      
      - name: "tag the build"
        uses: EndBug/latest-tag@latest
        with:
          tag-name: ${{ env.TAG_NAME }}
          
      - name: upload to pypi
        run: twine upload -u "__token__" -p "${{ secrets.PYPI_TOKEN }}" ${GITHUB_WORKSPACE}/dist/*

      - name: set up Docker Buildx
        uses: docker/setup-buildx-action@v2.5.0
        
      - name: log in to Docker Hub
        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          
      - name: build and export to Docker
        uses: docker/build-push-action@v5
        with:
          context: .
          load: true
          tags: ${{ env.TEST_TAG }}
          
      - name: basic test
        run: |
          docker run --rm ${{ env.TEST_TAG }} -h
          
      - name: build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: threatworx/twigs:${{ env.TAG_NAME }}, ${{ env.LATEST_TAG }}
          platforms: linux/amd64,linux/arm64
